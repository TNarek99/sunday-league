type Game {
    id: ID!
    date: DateTime!
    location: String!
    teamCapacity: Int!
    booked: Boolean!
    type: GameType!
    rating: Float
    matchStatus: MatchStatus!
}

input GameInput {
    date: DateTime!
    location: String!
    teamCapacity: Int!
    type: GameType!
}

enum GameType {
    OPEN
    CLOSE
    PRIVATE
}

enum MatchStatus {
    PENDING
    STARTED
    FINISHED
}

extend type Query {
    openGames: [Game]!
}

extend type Mutation {
    createGame(game: GameInput!): ID!
}
